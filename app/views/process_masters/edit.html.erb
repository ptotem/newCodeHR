<h1>Editing Process Master</h1>

<%= render 'form' %>

<script>
  function addMasterStep(selectedAction, selectedActionModel, stepno) {
	  initHTMLAppender($("#process-master-form"), buildMasterStep(stepno, selectedAction, selectedActionModel));
	  renameMasterSteps();
	  
	  $("#process-master-form .panel .accordion-toggle").last().trigger('click');
  }

  function addMasterStepsToEdit(){
  	for(var i = 0, len = gon.modelData.master_steps.length; i < len; i++){
  		var lastStep = $("#process-master-form .stepno_hidden").last()[0];
	  	var stepno = lastStep ? parseInt(lastStep.value)+1 : 1;
  		addMasterStep(gon.modelData.master_steps[i].action, gon.modelData.master_steps[i].action_class, stepno);
  		var actionJqueryObj = $("#process-master-form .chosen-select").eq($("#process-master-form .chosen-select").length - 2);
	  	getActionForm(actionJqueryObj);
	  	if(gon.modelData.master_steps[i].action_obj)
	  		addActionObjectDetails(gon.modelData.master_steps[i].action_obj, '');

	  	if(gon.modelData.master_steps[i].action == 'SpawnD' || gon.modelData.master_steps[i].action == 'SpawnI'){
	  		var selector = '[name="masterSteps['+ stepno +'][spawn_process]"]';
  			var jqueryObj = $(selector);
  			jqueryObj.find('[value="'+ gon.modelData.master_steps[i].spawn_process +'"]').attr('selected', true);
				jqueryObj.trigger("chosen:updated");
	  	}
  	}
  	makeChosen();
  }

  function addActionObjectDetails(action_obj, loopKey){
		var stepno = $("#process-master-form .stepno_hidden").last()[0].value;
  	for(var i in action_obj){
  		if(typeof action_obj[i] != "object"){
  			var key = loopKey + '[' +i +']';
  			var selector = '[name="masterSteps['+ stepno +'][action_obj]'+ key +'"]'
  			var jqueryObj = $(selector);
  			setValueOfObject(selector, jqueryObj ,action_obj[i]);
  		}
  		else if(action_obj[i].constructor == Array){
  			var key = loopKey + '[' +i +'][]';
  			var selector = '[name="masterSteps['+ stepno +'][action_obj]'+ key +'"]'
  			var jqueryObj = $(selector);
  			setValueOfArray(selector, jqueryObj, action_obj[i]);
  		}
  		else{
  			addActionObjectDetails(action_obj[i], '[' + i + ']');
  		}
		}
  }


  function setValueOfObject (selector, _this, value){ 
		if(_this[0].tagName != "SELECT"){
			_this.val(value)
			if(_this.attr('type') != 'text' && _this.attr('type') != undefined)
				_this.trigger('click')
		}else{
			_this.find('[value="'+ value +'"]').attr('selected', true)
			_this.trigger("chosen:updated");
			getModelTableData(_this, 'action_obj', 'agents');
		}
  }

  function setValueOfArray (selector, _this, values) {
  	if(_this.length > 1)
  		for(var i = 0, len = values.length; i < len; i++)
  			$(selector + '[value='+ values[i] +']').trigger('click')
  	else{
  		for(var i = 0, len = values.length; i < len; i++){
  			_this.find('[value='+ values[i] +']').attr('selected', true)
  		}
  		_this.trigger("chosen:updated");
  	}
  }

  addMasterStepsToEdit();
		
</script>